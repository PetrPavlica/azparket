{"version":3,"sources":["enum/messages.js","MyToolbar.js","App.js","index.js"],"names":["enum_messages","allDay","previous","next","refresh","today","month","week","work_week","day","agenda","date","time","event","noEventsInRange","showMore","total","concat","MyToolbar","navigate","action","_this","props","onNavigate","view","onView","_this$props","this","messages","localizer","label","react_default","a","createElement","className","type","onClick","bind","TODAY","PREVIOUS","NEXT","style","marginLeft","viewNamesGroup","_this2","viewNames","views","length","map","name","key","Component","moment","locale","momentLocalizer","DnDCalendar","withDragAndDrop","BigCalendar","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","events","test","document","getElementById","innerText","moveEvent","assertThisInitialized","newEvent","newEventVisit","editEvent","editEventVisit","editEventExternServiceVisit","resizeEvent","changeView","changeNavigate","GetEvents","prevProps","prevState","console","log","isDay","Axios","post","BASEURL","then","response","finalEvs","evs","data","success","hasOwnProperty","obj","id","title","start","Date","end","color","desc","setState","catch","error","y","getFullYear","m","getMonth","d","getDate","sh","getHours","sm","getMinutes","eh","em","_ref","idx","indexOf","updatedEvent","_objectSpread","nextEvents","toConsumableArray","splice","ChangeEvent","_ref2","window","open","focus","nDay","getDay","mm","dd","ymd","sMin","startHM","eMin","endHM","intType","parseInt","defaultDate","defaultView","selectable","step","timeslots","min","setHours","max","eventPropGetter","backgroundColor","dayLayoutAlgorithm","onEventDrop","resizable","onEventResize","onSelectSlot","onDoubleClickEvent","onDragStart","height","components","toolbar","ReactDOM","render","src_App_0"],"mappings":"2TAAeA,UAAA,CACXC,OAAQ,cACRC,SAAU,oBACVC,KAAM,gBACNC,QAAS,UACTC,MAAO,OACPC,MAAO,gBACPC,KAAM,WACNC,UAAW,WACXC,IAAK,MACLC,OAAQ,SACRC,KAAM,QACNC,KAAM,WACNC,MAAO,wBACPC,gBAAiB,yCACjBC,SAAU,SAAAC,GAAK,mCAAAC,OAAyBD,EAAzB,gBCqEJE,6MApCXC,SAAW,SAAAC,GACPC,EAAKC,MAAMC,WAAWH,MAG1BI,KAAO,SAAAA,GACHH,EAAKC,MAAMG,OAAOD,4EAhDb,IAAAE,EAIDC,KAAKL,MAFQM,EAFZF,EAEDG,UAAaD,SACbE,EAHCJ,EAGDI,MAGJ,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACnBH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,iBACdH,EAAAC,EAAAC,cAAA,UACIE,KAAK,SACLC,QAAST,KAAKR,SAASkB,KAAK,KAAMlB,WAASmB,QAE5CV,EAASvB,OAEZ0B,EAAAC,EAAAC,cAAA,UACIE,KAAK,SACLC,QAAST,KAAKR,SAASkB,KAAK,KAAMlB,WAASoB,WAE5CX,EAAS1B,UAEZ6B,EAAAC,EAAAC,cAAA,UACIE,KAAK,SACLC,QAAST,KAAKR,SAASkB,KAAK,KAAMlB,WAASqB,OAE5CZ,EAASzB,MAEV4B,EAAAC,EAAAC,cAAA,UACIE,KAAK,SACLM,MAAO,CAAEC,WAAY,QACrBN,QAAST,KAAKR,SAASkB,KAAK,KAAM,YAErCT,EAASxB,UAIN2B,EAAAC,EAAAC,cAAA,QAAMC,UAAU,qBAAqBJ,GAErCC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,iBAAiBP,KAAKgB,eAAef,4CAalDA,GAAU,IAAAgB,EAAAjB,KACjBkB,EAAYlB,KAAKL,MAAMwB,MACrBtB,EAAOG,KAAKL,MAAME,KAExB,GAAIqB,EAAUE,OAAS,EACnB,OAAOF,EAAUG,IAAI,SAAAC,GAAI,OACrBlB,EAAAC,EAAAC,cAAA,UACIE,KAAK,SACLe,IAAKD,EACLf,UAAYV,IAASyB,EAAO,aAAe,GAC3Cb,QAASQ,EAAKpB,KAAKa,KAAK,KAAMY,IAE7BrB,EAASqB,aAhENE,8kBCUxBC,IAAOC,OAAO,MACd,IAAMxB,EAAYyB,YAAgBF,KAC5BG,EAAcC,IAAgBC,KAyOrBC,cApOX,SAAAA,EAAYpC,GAAO,IAAAD,EAAA,OAAAsC,OAAAC,EAAA,EAAAD,CAAAhC,KAAA+B,IACfrC,EAAAsC,OAAAE,EAAA,EAAAF,CAAAhC,KAAAgC,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAApC,KAAML,KACD0C,MAAQ,CACTC,OAAQ,GACRC,KAAM,GACN/B,KAAMgC,SAASC,eAAe,sBAAsBC,WAGxDhD,EAAKiD,UAAYjD,EAAKiD,UAAUjC,KAAfsB,OAAAY,EAAA,EAAAZ,CAAAtC,IACjBA,EAAKmD,SAAWnD,EAAKmD,SAASnC,KAAdsB,OAAAY,EAAA,EAAAZ,CAAAtC,IAChBA,EAAKoD,cAAgBpD,EAAKoD,cAAcpC,KAAnBsB,OAAAY,EAAA,EAAAZ,CAAAtC,IACrBA,EAAKqD,UAAYrD,EAAKqD,UAAUrC,KAAfsB,OAAAY,EAAA,EAAAZ,CAAAtC,IACjBA,EAAKsD,eAAiBtD,EAAKsD,eAAetC,KAApBsB,OAAAY,EAAA,EAAAZ,CAAAtC,IACtBA,EAAKuD,4BAA8BvD,EAAKuD,4BAA4BvC,KAAjCsB,OAAAY,EAAA,EAAAZ,CAAAtC,IACnCA,EAAKwD,YAAcxD,EAAKwD,YAAYxC,KAAjBsB,OAAAY,EAAA,EAAAZ,CAAAtC,IACnBA,EAAKyD,WAAazD,EAAKyD,WAAWzC,KAAhBsB,OAAAY,EAAA,EAAAZ,CAAAtC,IAClBA,EAAK0D,eAAiB1D,EAAK0D,eAAe1C,KAApBsB,OAAAY,EAAA,EAAAZ,CAAAtC,IAhBPA,mFAoBfM,KAAKqD,WAAU,8CAGAC,EAAWC,GAC1BC,QAAQC,IAAIF,qCAGNG,GACN,IAAIhE,EAAQM,KACZ2D,IAAMC,KAAKC,QAAU,wBAAyB,CAACrD,KAAMd,EAAM2C,MAAM7B,OAC5DsD,KAAK,SAAUC,GACZ,IAAIC,EAAW,GACXC,EAAMF,EAASG,KAAKC,QAAQ7B,OAEhC,IAAK,IAAIf,KAAO0C,EAEZ,GAAKA,EAAIG,eAAe7C,GAAxB,CAEA,IAAI8C,EAAMJ,EAAI1C,GACdyC,EAASK,EAAG,IAAU,CAClBC,GAAID,EAAG,GACPE,MAAOF,EAAG,MACVG,MAAO,IAAIC,KAAKJ,EAAG,EAAOA,EAAG,EAAOA,EAAG,EAAOA,EAAG,GAAQA,EAAG,IAC5DK,IAAK,IAAID,KAAKJ,EAAG,EAAOA,EAAG,EAAOA,EAAG,EAAOA,EAAG,GAAQA,EAAG,IAC1DM,MAAON,EAAG,MACVO,KAAMP,EAAG,MAIjB3E,EAAMmF,SAAS,CAACvC,OAAQ0B,MACzBc,MAAM,SAAUC,GACfvB,QAAQC,IAAIsB,yCAIZ7F,GAERyE,IAAMC,KAAKC,QAAU,0BAA2B,CAC5CS,GAAIpF,EAAK,GACT8F,EAAG9F,EAAK,MAAU+F,cAClBC,EAAGhG,EAAK,MAAUiG,WAAW,EAC7BC,EAAGlG,EAAK,MAAUmG,UAClBC,GAAIpG,EAAK,MAAUqG,WACnBC,GAAItG,EAAK,MAAUuG,aACnBC,GAAIxG,EAAK,IAAQqG,WACjBI,GAAIzG,EAAK,IAAQuG,aACjBjF,KAVQR,KAUIqC,MAAM7B,OACnBsD,KAAK,SAAUC,GACVA,EAASG,KAAKC,UACdX,QAAQC,IAAI,QACZD,QAAQC,IAAIM,EAASG,KAAKC,YAE/BW,MAAM,SAAUC,GACfvB,QAAQC,IAAIsB,wCAITzD,2CAIItC,EAAMa,EAAMyB,GACvBkC,QAAQC,IAAInC,EAAMzB,GACN,YAATyB,GACCtB,KAAKqD,UAAmB,QAATxD,wCAIU,IAArBX,EAAqB0G,EAArB1G,MAAOsF,EAAcoB,EAAdpB,MAAOE,EAAOkB,EAAPlB,IACdpC,EAAWtC,KAAKqC,MAAhBC,OAEFuD,EAAMvD,EAAOwD,QAAQ5G,GAGrB6G,EAAYC,EAAA,GAAQ9G,EAAR,CAAesF,QAAOE,MAAKpG,QAFhC,IAIP2H,EAAUjE,OAAAkE,EAAA,EAAAlE,CAAOM,GACvB2D,EAAWE,OAAON,EAAK,EAAGE,GAE1B/F,KAAKoG,YAAYL,GAEjB/F,KAAK6E,SAAS,CACVvC,OAAQ2D,IAIZzC,QAAQC,IAAIvE,GACZsE,QAAQC,IAAIe,EAAOE,0CAGY,IAArBxF,EAAqBmH,EAArBnH,MAAOsF,EAAc6B,EAAd7B,MAAOE,EAAO2B,EAAP3B,IAChBpC,EAAWtC,KAAKqC,MAAhBC,OAEFuD,EAAMvD,EAAOwD,QAAQ5G,GAQrB6G,EAAYC,EAAA,GAAQ9G,EAAR,CAAesF,QAAOE,QAElCuB,EAAUjE,OAAAkE,EAAA,EAAAlE,CAAOM,GACvB2D,EAAWE,OAAON,EAAK,EAAGE,GAE1B/F,KAAKoG,YAAYL,GAEjB/F,KAAK6E,SAAS,CACVvC,OAAQ2D,IAIZzC,QAAQC,IAAIvE,GACZsE,QAAQC,IAAIe,EAAOE,qCAGbxF,GACIoH,OAAOC,KAAK1C,QAAU,6BAA+B3E,EAAK,GAAQ,UACxEsH,+CAGOtH,GACDoH,OAAOC,KAAK1C,QAAU,qBAAuB3E,EAAK,GAAQ,UAChEsH,4DAGoBtH,GACdoH,OAAOC,KAAK1C,QAAU,oCAAsC3E,EAAK,GAAQ,UAC/EsH,yCAGCtH,GACLsE,QAAQC,IAAIvE,yCAeFA,GACVsE,QAAQC,IAAIvE,GAEZ,IAAIuH,EAAOvH,EAAMsF,MAAMkC,SAEnBC,EAAKzH,EAAMsF,MAAMW,WAAa,EAC9ByB,EAAK1H,EAAMsF,MAAMa,UACjBwB,EAAM3H,EAAMsF,MAAMS,cAAe,KAAO0B,EAAK,EAAI,GAAK,KAAOA,EAAK,KAAOC,EAAK,EAAI,GAAK,KAAOA,EAE9FE,EAAO5H,EAAMsF,MAAMiB,aACnBsB,EAAU7H,EAAMsF,MAAMe,WAAa,KAAOuB,EAAO,EAAI,GAAK,KAAOA,EAEjEE,EAAO9H,EAAMwF,IAAIe,aACjBwB,EAAQ/H,EAAMwF,IAAIa,WAAa,KAAOyB,EAAO,EAAI,GAAK,KAAOA,EAEvDV,OAAOC,KAAK1C,QAAU,yBAA2B4C,EAAO,UAAYM,EAAU,QAAUE,EAAQ,QAAUJ,EAAK,UACrHL,yCAIJ,IAAIU,EAAUC,SAASnH,KAAKqC,MAAM7B,MAClC,OACIJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAACsB,EAAD,CACIwF,YAAa,IAAI3C,KACjB4C,YAA0B,IAAZH,EAAiB,MAAQ,YACvC/F,MAAO,CAAC,OAAQ,YAAa,MAAO,UACpCmG,YAAU,EACVC,KAAmB,IAAZL,GAA6B,IAAZA,EAAiB,GAAK,EAC9C9F,OAAQ,GACRoG,UAAwB,IAAZN,EAAiB,EAAI,GACjCO,IAAkB,IAAZP,GAA6B,IAAZA,EAAiB,IAAIzC,MAAK,IAAIA,MAAOiD,SAAS,EAAG,IAAM,IAAIjD,MAAK,IAAIA,MAAOiD,SAAS,EAAG,IAC9GC,IAAkB,IAAZT,GAA6B,IAAZA,EAAiB,IAAIzC,MAAK,IAAIA,MAAOiD,SAAS,GAAI,IAAM,IAAIjD,MAAK,IAAIA,MAAOiD,SAAS,GAAI,IAChHxH,UAAWA,EACXoC,OAAQtC,KAAKqC,MAAMC,OACnBsF,gBAAiB,SAAA1I,GAAK,MAAK,CACvB4B,MAAO,CACH+G,gBAAiB3I,EAAMyF,SAG/BmD,mBAAmB,aACnB7H,SAAUA,EACV8H,YAAa/H,KAAK2C,UAClBqF,WAAS,EACTC,cAAejI,KAAKkD,YACpBgF,aAA2B,IAAZhB,EAAiBlH,KAAK8C,cAAgB9C,KAAK6C,SAC1DsF,mBAAiC,IAAZjB,EAAiBlH,KAAKgD,eAA+B,IAAZkE,EAAiBlH,KAAKiD,4BAA8BjD,KAAK+C,UACvHjD,OAAQE,KAAKmD,WACbvD,WAAYI,KAAKoD,eACjBgF,YAAa5E,QAAQC,IACrB3C,MAAO,CAAEuH,OAAQ,SACjBC,WAAY,CACRC,QAAShJ,aA7NfiC,aCdlBgH,IAASC,OAAOrI,EAAAC,EAAAC,cAACoI,EAAD,MAASlG,SAASC,eAAe","file":"static/js/main.483467a8.chunk.js","sourcesContent":["export default {\r\n    allDay: 'Celý den',\r\n    previous: 'Předchozí',\r\n    next: 'Další',\r\n    refresh: 'Obnovit',\r\n    today: 'Dnes',\r\n    month: 'Měsíc',\r\n    week: 'Týden',\r\n    work_week: '5 dní',\r\n    day: 'Den',\r\n    agenda: 'Agenda',\r\n    date: 'Datum',\r\n    time: 'Čas',\r\n    event: 'Návštěva',\r\n    noEventsInRange: 'Žádné návštěvy',\r\n    showMore: total => `+ Zobrazit další (${total})`\r\n}","import PropTypes from 'prop-types'\r\nimport React, { Component } from 'react'\r\nimport { navigate } from 'react-big-calendar/lib/utils/constants'\r\n\r\nclass MyToolbar extends Component {\r\n    render() {\r\n        let {\r\n            localizer: { messages },\r\n            label,\r\n        } = this.props;\r\n\r\n        return (\r\n            <div className=\"rbc-toolbar\">\r\n        <span className=\"rbc-btn-group\">\r\n          <button\r\n              type=\"button\"\r\n              onClick={this.navigate.bind(null, navigate.TODAY)}\r\n          >\r\n            {messages.today}\r\n          </button>\r\n          <button\r\n              type=\"button\"\r\n              onClick={this.navigate.bind(null, navigate.PREVIOUS)}\r\n          >\r\n            {messages.previous}\r\n          </button>\r\n          <button\r\n              type=\"button\"\r\n              onClick={this.navigate.bind(null, navigate.NEXT)}\r\n          >\r\n            {messages.next}\r\n          </button>\r\n            <button\r\n                type=\"button\"\r\n                style={{ marginLeft: '30px' }}\r\n                onClick={this.navigate.bind(null, 'REFRESH')}\r\n            >\r\n            {messages.refresh}\r\n          </button>\r\n        </span>\r\n\r\n                <span className=\"rbc-toolbar-label\">{label}</span>\r\n\r\n                <span className=\"rbc-btn-group\">{this.viewNamesGroup(messages)}</span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    navigate = action => {\r\n        this.props.onNavigate(action)\r\n    };\r\n\r\n    view = view => {\r\n        this.props.onView(view)\r\n    };\r\n\r\n    viewNamesGroup(messages) {\r\n        let viewNames = this.props.views;\r\n        const view = this.props.view;\r\n\r\n        if (viewNames.length > 1) {\r\n            return viewNames.map(name => (\r\n                <button\r\n                    type=\"button\"\r\n                    key={name}\r\n                    className={ view === name ? 'rbc-active' : '' }\r\n                    onClick={this.view.bind(null, name)}\r\n                >\r\n                    {messages[name]}\r\n                </button>\r\n            ))\r\n        }\r\n    }\r\n}\r\n\r\nMyToolbar.propTypes = {\r\n    view: PropTypes.string.isRequired,\r\n    views: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n    label: PropTypes.node.isRequired,\r\n    localizer: PropTypes.object,\r\n    onNavigate: PropTypes.func.isRequired,\r\n    onView: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default MyToolbar","import React, { Component } from \"react\";\r\nimport { Calendar as BigCalendar, momentLocalizer } from \"react-big-calendar\";\r\nimport moment from \"moment\";\r\nimport 'moment/locale/cs';\r\nimport withDragAndDrop from \"react-big-calendar/lib/addons/dragAndDrop\";\r\n\r\nimport Axios from 'axios';\r\n\r\nimport \"./App.css\";\r\nimport messages from './enum/messages';\r\nimport MyToolbar from './MyToolbar';\r\nimport \"react-big-calendar/lib/addons/dragAndDrop/styles.css\";\r\nimport \"./react-big-calendar.css\";\r\n\r\nmoment.locale('cs');\r\nconst localizer = momentLocalizer(moment);\r\nconst DnDCalendar = withDragAndDrop(BigCalendar);\r\n\r\n/*global BASEURL*/\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            events: [],\r\n            test: [],\r\n            type: document.getElementById(\"calendar-type-help\").innerText,\r\n        };\r\n\r\n        this.moveEvent = this.moveEvent.bind(this);\r\n        this.newEvent = this.newEvent.bind(this);\r\n        this.newEventVisit = this.newEventVisit.bind(this);\r\n        this.editEvent = this.editEvent.bind(this);\r\n        this.editEventVisit = this.editEventVisit.bind(this);\r\n        this.editEventExternServiceVisit = this.editEventExternServiceVisit.bind(this);\r\n        this.resizeEvent = this.resizeEvent.bind(this);\r\n        this.changeView = this.changeView.bind(this);\r\n        this.changeNavigate = this.changeNavigate.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.GetEvents(false);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        console.log(prevState);\r\n    }\r\n\r\n    GetEvents(isDay) {\r\n        let _this = this;\r\n        Axios.post(BASEURL + '/api/event/get-events', {type: _this.state.type})\r\n            .then(function (response) {\r\n                let finalEvs = [];\r\n                let evs = response.data.success.events;\r\n\r\n                for (let key in evs) {\r\n                    // skip loop if the property is from prototype\r\n                    if (!evs.hasOwnProperty(key)) continue;\r\n\r\n                    let obj = evs[key];\r\n                    finalEvs[obj['id']] = {\r\n                        id: obj['id'],\r\n                        title: obj['title'],\r\n                        start: new Date(obj['y'], obj['m'], obj['d'], obj['sh'], obj['sm']),\r\n                        end: new Date(obj['y'], obj['m'], obj['d'], obj['eh'], obj['em']),\r\n                        color: obj['color'],\r\n                        desc: obj['desc']\r\n                    };\r\n                }\r\n\r\n                _this.setState({events: finalEvs});\r\n            }).catch(function (error) {\r\n                console.log(error);\r\n        });\r\n    }\r\n\r\n    ChangeEvent(event) {\r\n        let _this = this;\r\n        Axios.post(BASEURL + '/api/event/change-event', {\r\n            id: event['id'],\r\n            y: event['start'].getFullYear(),\r\n            m: event['start'].getMonth()+1,\r\n            d: event['start'].getDate(),\r\n            sh: event['start'].getHours(),\r\n            sm: event['start'].getMinutes(),\r\n            eh: event['end'].getHours(),\r\n            em: event['end'].getMinutes(),\r\n            type: _this.state.type\r\n        }).then(function (response) {\r\n            if (response.data.success) {\r\n                console.log('DONE');\r\n                console.log(response.data.success);\r\n            }\r\n        }).catch(function (error) {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    changeView(name) {\r\n\r\n    }\r\n\r\n    changeNavigate(date, view, name) {\r\n        console.log(name, view);\r\n        if(name === 'REFRESH') {\r\n            this.GetEvents(view === 'day');\r\n        }\r\n    }\r\n\r\n    moveEvent({ event, start, end }) {\r\n        const { events } = this.state;\r\n\r\n        const idx = events.indexOf(event);\r\n        let allDay = false;\r\n\r\n        const updatedEvent = { ...event, start, end, allDay };\r\n\r\n        const nextEvents = [...events];\r\n        nextEvents.splice(idx, 1, updatedEvent);\r\n\r\n        this.ChangeEvent(updatedEvent);\r\n\r\n        this.setState({\r\n            events: nextEvents,\r\n        });\r\n\r\n\r\n        console.log(event);\r\n        console.log(start, end);\r\n    }\r\n\r\n    resizeEvent({ event, start, end }) {\r\n        const { events } = this.state;\r\n\r\n        const idx = events.indexOf(event);\r\n\r\n        /*const nextEvents = events.map(existingEvent => {\r\n            return existingEvent.id === event.id\r\n                ? { ...existingEvent, start, end }\r\n                : existingEvent\r\n        });*/\r\n\r\n        const updatedEvent = { ...event, start, end };\r\n\r\n        const nextEvents = [...events];\r\n        nextEvents.splice(idx, 1, updatedEvent);\r\n\r\n        this.ChangeEvent(updatedEvent);\r\n\r\n        this.setState({\r\n            events: nextEvents,\r\n        });\r\n\r\n\r\n        console.log(event);\r\n        console.log(start, end);\r\n    };\r\n\r\n    editEvent(event) {\r\n        let win = window.open(BASEURL + '/intra/worker-tender/edit/' + event['id'], '_blank');\r\n        win.focus();\r\n    }\r\n\r\n    editEventVisit(event) {\r\n        let win = window.open(BASEURL + '/intra/visit/edit/' + event['id'], '_blank');\r\n        win.focus();\r\n    }\r\n\r\n    editEventExternServiceVisit(event) {\r\n        let win = window.open(BASEURL + '/intra/extern-service-visit/edit/' + event['id'], '_blank');\r\n        win.focus();\r\n    }\r\n\r\n    newEvent(event) {\r\n        console.log(event);\r\n        // let idList = this.state.events.map(a => a.id)\r\n        // let newId = Math.max(...idList) + 1\r\n        // let hour = {\r\n        //   id: newId,\r\n        //   title: 'New Event',\r\n        //   allDay: event.slots.length == 1,\r\n        //   start: event.start,\r\n        //   end: event.end,\r\n        // }\r\n        // this.setState({\r\n        //   events: this.state.events.concat([hour]),\r\n        // })\r\n    }\r\n\r\n    newEventVisit(event) {\r\n        console.log(event);\r\n\r\n        let nDay = event.start.getDay();\r\n\r\n        let mm = event.start.getMonth() + 1;\r\n        let dd = event.start.getDate();\r\n        let ymd = event.start.getFullYear()+ '-' + (mm > 9 ? '' : '0') + mm + '-' + (dd > 9 ? '' : '0') + dd;\r\n\r\n        let sMin = event.start.getMinutes();\r\n        let startHM = event.start.getHours() + ':' + (sMin > 9 ? '' : '0') + sMin;\r\n\r\n        let eMin = event.end.getMinutes();\r\n        let endHM = event.end.getHours() + ':' + (eMin > 9 ? '' : '0') + eMin;\r\n\r\n        let win = window.open(BASEURL + '/intra/visit/edit?day=' + nDay + '&start=' + startHM + '&end=' + endHM + '&ymd=' + ymd, '_blank');\r\n        win.focus();\r\n    }\r\n\r\n    render() {\r\n        let intType = parseInt(this.state.type);\r\n        return (\r\n            <div className=\"App\">\r\n                <DnDCalendar\r\n                    defaultDate={new Date()}\r\n                    defaultView={(intType === 0) ? 'day' : \"work_week\"}\r\n                    views={['week', 'work_week', 'day', 'agenda']}\r\n                    selectable\r\n                    step={(intType === 0 || intType === 2) ? 30 : 5}\r\n                    length={30}\r\n                    timeslots={(intType === 0) ? 2 : 12}\r\n                    min={(intType === 0 || intType === 2) ? new Date(new Date().setHours(0, 0)) : new Date(new Date().setHours(6, 0))}\r\n                    max={(intType === 0 || intType === 2) ? new Date(new Date().setHours(23, 0)) : new Date(new Date().setHours(17, 0))}\r\n                    localizer={localizer}\r\n                    events={this.state.events}\r\n                    eventPropGetter={event => ({\r\n                        style: {\r\n                            backgroundColor: event.color\r\n                        }\r\n                    })}\r\n                    dayLayoutAlgorithm=\"no-overlap\"\r\n                    messages={messages}\r\n                    onEventDrop={this.moveEvent}\r\n                    resizable\r\n                    onEventResize={this.resizeEvent}\r\n                    onSelectSlot={(intType === 0) ? this.newEventVisit : this.newEvent}\r\n                    onDoubleClickEvent={(intType === 0) ? this.editEventVisit : ((intType === 2) ? this.editEventExternServiceVisit : this.editEvent)}\r\n                    onView={this.changeView}\r\n                    onNavigate={this.changeNavigate}\r\n                    onDragStart={console.log}\r\n                    style={{ height: \"100vh\" }}\r\n                    components={{\r\n                        toolbar: MyToolbar,\r\n                    }}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n//import registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n//registerServiceWorker();\r\n"],"sourceRoot":""}